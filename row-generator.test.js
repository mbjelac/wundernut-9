import { generateRows } from "./row-generator";

test('generates rows according to the two rules', () => {

  function shouldGenerate(initialRow, expectedGeneratedRows) {

    expect(
      generateRows(initialRow, 6))
      .toEqual(expectedGeneratedRows);
  }

  shouldGenerate(
    '...........',
    [
      '...........',
      '...........',
      '...........',
      '...........',
      '...........',
      '...........',
    ]);

  shouldGenerate(
    '#..........',
    [
      '#..........',
      '...........',
      '...........',
      '...........',
      '...........',
      '...........',
    ]);

  shouldGenerate(
    '.#.........',
    [
      '.#.........',
      '...........',
      '...........',
      '...........',
      '...........',
      '...........',
    ]);

  shouldGenerate(
    '.....#.....',
    [
      '.....#.....',
      '...........',
      '...........',
      '...........',
      '...........',
      '...........',
    ]);

  shouldGenerate(
    '.##........',
    [
      '.##........',
      '#..#.......',
      '.##........',
      '#..#.......',
      '.##........',
      '#..#.......',
    ]);

  shouldGenerate(
    '...#.###...',
    [
      '...#.###...',
      '....#.###..',
      '.....#.###.',
      '......#.###',
      '.......#.##',
      '........#.#',
    ]
  );
});


